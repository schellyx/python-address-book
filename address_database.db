import mysql.connector
import configparser

config = configparser.ConfigParser()
config.read('db_config.ini')

#connecting with database
def connect_database():
    return mysql.connector("mydatabase")

def create_connection():
    connection = mysql.connector(
        host = config['mysql']['host'],
        user = config['mysql']['user'],
        password = config['mysql']['password'],
        database = config['mysql']['database']) # ggf. anpassen
    
    if connection.is_connected():
        return connection
    else:
        print("connection failed")


    connection = create_connection()
    if connection:
        print("connection succesfull")
        connection.close()
    else:
        print("connection failed")

#create table
def create_table():
    db = connect_database()
    cursor = db.cursor()

    query = f"""
            CREATE TABLE IF NOT EXISTS Contacts 
        (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name VARCHAR(255) NOT NULL,
            number VARCHAR(50),
            email VARCHAR(100),
            address VARCHAR(255)
        )
            """
    cursor.execute(query)
    db.commit()
    db.close()

#add functions
def add_contacts(name, number, email, address):
    db = connect_database()
    cursor = db.cursor()

    query = f"""
            INSERT INTO contacts (name, number, email, adress)
            VALUES (%s, %s, %s, %s, %s)
            """
    values = (name, number, email, address)

    cursor.execute(query)
    db.commit()
    db.close()


def select_contacts():
    db = connect_database()
    cursor = db.cursor()

    query = f"""
            select * from Contacts
            """
    cursor.execute(query)
    items = cursor.fetchall()

    db.commit()
    db.close()
    return items


def update_contacts(name, number, email, address):
    db = connect_database()
    cursor = db.cursor()

    query = f"""
            update contacts set name = '{name}', number = {number}, email = '{email}', address = '{address}' where id = {id}
            """
    cursor.execute(query)
    db.commit()
    db.close()


def delete_contacts(id):
    db = connect_database()
    cursor = db.cursor()

    query = f"""
            delete from contacts where id = {id}
            """
    cursor.execute(query)
    db.commit()
    db.close()